/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <220>;
};

&mt {
    quick_tap_ms = <220>;
};

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };
        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
       &kp TAB  &kp Q  &kp W             &kp E          &kp R  &kp T        &kp Y      &kp U          &kp I    &kp O     &kp P         &kp EQUAL
       &kp ESC  &kp A  &kp S           &lt 1 D        &lt 3 F  &kp G        &kp H    &lt 3 J          &kp K    &kp L  &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &kp X             &kp C          &kp V  &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH   &kp RIGHT_SHIFT
                              &kp LEFT_COMMAND  &kp BACKSPACE  &mo 2    &kp ENTER  &kp SPACE  &kp RIGHT_ALT
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &kp KP_DOT        &kp N7  &kp NUMBER_8  &kp NUMBER_9    &kp KP_PLUS           &trans
&trans  &trans  &trans  &trans  &trans  &trans         &kp MINUS  &kp NUMBER_4  &kp NUMBER_5        &kp N6   &kp KP_MINUS           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE  &kp KP_MULTIPLY
                        &trans  &trans  &trans            &trans        &trans  &kp NUMBER_0
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP      &trans  &kp PAGE_UP  &kp PAGE_DOWN     &trans    &trans     &trans
&trans  &trans  &trans      &trans        &trans        &trans    &kp LEFT     &kp DOWN         &kp UP  &kp RIGHT    &kp UP     &trans
&trans  &trans  &trans      &trans        &trans        &trans      &trans     &kp HOME        &kp END   &kp LEFT  &kp DOWN  &kp RIGHT
                            &trans        &trans        &trans      &trans       &trans         &trans
            >;
        };

        SYMBOLS {
            bindings = <
&trans          &kp GRAVE     &kp AT     &kp PIPE        &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp BACKSLASH  &kp ASTERISK         &trans            &trans     &trans  &trans
&trans  &kp DOUBLE_QUOTES   &kp EXCL   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS        &kp MINUS      &kp AMPS       &kp HASH            &trans  &kp COLON  &trans
&trans   &kp SINGLE_QUOTE  &kp TILDE  &kp PERCENT      &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp UNDER     &kp CARET  &kp LESS_THAN  &kp GREATER_THAN     &trans  &trans
                                           &trans                &trans                 &trans           &trans        &trans         &trans
            >;
        };
    };
};
